<?xml version='1.0' encoding='utf-8'?>
<modules><module name="jedi" type="package"><dependency name="jedi.__main__" type="module" /><dependency name="jedi.api" type="package" /><dependency name="jedi.api.environment" type="module" /><dependency name="jedi.api.exceptions" type="module" /><dependency name="jedi.api.project" type="module" /><dependency name="jedi.api.replstartup" type="module" /><dependency name="jedi.inference.compiled.subprocess" type="package" /><dependency name="jedi.plugins.registry" type="module" /><dependency name="jedi.settings" type="module" /><dependency name="jedi.utils" type="module" /><dependency name="scripts.diff_parser_profile" type="module" /><dependency name="scripts.memory_check" type="module" /><dependency name="scripts.profile_output" type="module" /><dependency name="scripts.wx_check" type="module" /></module><module name="jedi.__main__" type="module"><dependency name="jedi" type="package" /></module><module name="jedi._compatibility" type="module"><dependency name="jedi.inference.compiled.subprocess" type="package" /></module><module name="jedi.api" type="package"><dependency name="jedi" type="package" /><dependency name="jedi.api.classes" type="module" /><dependency name="jedi.api.completion" type="module" /><dependency name="jedi.api.environment" type="module" /><dependency name="jedi.api.errors" type="module" /><dependency name="jedi.api.helpers" type="module" /><dependency name="jedi.api.interpreter" type="module" /><dependency name="jedi.api.keywords" type="module" /><dependency name="jedi.api.project" type="module" /><dependency name="jedi.api.refactoring" type="package" /><dependency name="jedi.api.refactoring.extract" type="module" /><dependency name="jedi.cache" type="module" /><dependency name="jedi.debug" type="module" /><dependency name="jedi.file_io" type="module" /><dependency name="jedi.inference" type="package" /><dependency name="jedi.inference.arguments" type="module" /><dependency name="jedi.inference.base_value" type="module" /><dependency name="jedi.inference.gradual.conversion" type="module" /><dependency name="jedi.inference.gradual.utils" type="module" /><dependency name="jedi.inference.helpers" type="module" /><dependency name="jedi.inference.imports" type="module" /><dependency name="jedi.inference.references" type="module" /><dependency name="jedi.inference.syntax_tree" type="module" /><dependency name="jedi.inference.sys_path" type="module" /><dependency name="jedi.inference.utils" type="module" /><dependency name="jedi.inference.value" type="package" /><dependency name="jedi.inference.value.iterable" type="module" /><dependency name="jedi.parser_utils" type="module" /><dependency name="jedi.settings" type="module" /></module><module name="jedi.api.classes" type="module"><dependency name="jedi.api" type="package" /><dependency name="jedi.api.completion" type="module" /><dependency name="jedi.api.completion_cache" type="module" /><dependency name="jedi.api.file_name" type="module" /><dependency name="jedi.api.helpers" type="module" /><dependency name="jedi.api.keywords" type="module" /><dependency name="jedi.api.strings" type="module" /><dependency name="jedi.cache" type="module" /><dependency name="jedi.debug" type="module" /><dependency name="jedi.inference.base_value" type="module" /><dependency name="jedi.inference.compiled.mixed" type="module" /><dependency name="jedi.inference.gradual.conversion" type="module" /><dependency name="jedi.inference.gradual.stub_value" type="module" /><dependency name="jedi.inference.names" type="module" /><dependency name="jedi.inference.utils" type="module" /><dependency name="jedi.settings" type="module" /></module><module name="jedi.api.completion" type="module"><dependency name="jedi.api" type="package" /><dependency name="jedi.api.classes" type="module" /><dependency name="jedi.api.file_name" type="module" /><dependency name="jedi.api.helpers" type="module" /><dependency name="jedi.api.keywords" type="module" /><dependency name="jedi.api.project" type="module" /><dependency name="jedi.api.strings" type="module" /><dependency name="jedi.debug" type="module" /><dependency name="jedi.inference.base_value" type="module" /><dependency name="jedi.inference.context" type="module" /><dependency name="jedi.inference.docstring_utils" type="module" /><dependency name="jedi.inference.gradual.conversion" type="module" /><dependency name="jedi.inference.helpers" type="module" /><dependency name="jedi.inference.imports" type="module" /><dependency name="jedi.inference.names" type="module" /><dependency name="jedi.inference.value" type="package" /><dependency name="jedi.parser_utils" type="module" /><dependency name="jedi.plugins" type="package" /><dependency name="jedi.settings" type="module" /></module><module name="jedi.api.completion_cache" type="module"><dependency name="jedi.api.classes" type="module" /></module><module name="jedi.api.environment" type="module"><dependency name="jedi" type="package" /><dependency name="jedi.api" type="package" /><dependency name="jedi.api.project" type="module" /><dependency name="jedi.cache" type="module" /><dependency name="jedi.inference" type="package" /><dependency name="jedi.inference.compiled.subprocess" type="package" /></module><module name="jedi.api.errors" type="module"><dependency name="jedi.api" type="package" /></module><module name="jedi.api.exceptions" type="module"><dependency name="jedi" type="package" /><dependency name="jedi.api.project" type="module" /><dependency name="jedi.api.refactoring" type="package" /><dependency name="jedi.api.refactoring.extract" type="module" /><dependency name="jedi.inference.compiled.subprocess" type="package" /></module><module name="jedi.api.file_name" type="module"><dependency name="jedi.api.classes" type="module" /><dependency name="jedi.api.completion" type="module" /><dependency name="jedi.api.helpers" type="module" /><dependency name="jedi.api.strings" type="module" /><dependency name="jedi.inference.helpers" type="module" /></module><module name="jedi.api.helpers" type="module"><dependency name="jedi.api" type="package" /><dependency name="jedi.api.classes" type="module" /><dependency name="jedi.api.completion" type="module" /><dependency name="jedi.api.file_name" type="module" /><dependency name="jedi.api.project" type="module" /><dependency name="jedi.cache" type="module" /><dependency name="jedi.inference.base_value" type="module" /><dependency name="jedi.inference.compiled" type="package" /><dependency name="jedi.inference.helpers" type="module" /><dependency name="jedi.inference.syntax_tree" type="module" /><dependency name="jedi.parser_utils" type="module" /></module><module name="jedi.api.interpreter" type="module"><dependency name="jedi.api" type="package" /><dependency name="jedi.inference.base_value" type="module" /><dependency name="jedi.inference.compiled" type="package" /><dependency name="jedi.inference.compiled.access" type="module" /><dependency name="jedi.inference.compiled.mixed" type="module" /><dependency name="jedi.inference.context" type="module" /><dependency name="jedi.inference.filters" type="module" /><dependency name="jedi.inference.names" type="module" /></module><module name="jedi.api.keywords" type="module"><dependency name="jedi.api" type="package" /><dependency name="jedi.api.classes" type="module" /><dependency name="jedi.api.completion" type="module" /><dependency name="jedi.inference.names" type="module" /></module><module name="jedi.api.project" type="module"><dependency name="jedi" type="package" /><dependency name="jedi.api" type="package" /><dependency name="jedi.api.completion" type="module" /><dependency name="jedi.api.environment" type="module" /><dependency name="jedi.api.exceptions" type="module" /><dependency name="jedi.api.helpers" type="module" /><dependency name="jedi.debug" type="module" /><dependency name="jedi.file_io" type="module" /><dependency name="jedi.inference.cache" type="module" /><dependency name="jedi.inference.imports" type="module" /><dependency name="jedi.inference.references" type="module" /><dependency name="jedi.inference.sys_path" type="module" /></module><module name="jedi.api.refactoring" type="package"><dependency name="jedi.api" type="package" /><dependency name="jedi.api.exceptions" type="module" /><dependency name="jedi.api.refactoring.extract" type="module" /><dependency name="jedi.inference.value.namespace" type="module" /></module><module name="jedi.api.refactoring.extract" type="module"><dependency name="jedi.api" type="package" /><dependency name="jedi.api.exceptions" type="module" /><dependency name="jedi.api.refactoring" type="package" /><dependency name="jedi.common" type="module" /><dependency name="jedi.debug" type="module" /><dependency name="jedi.parser_utils" type="module" /></module><module name="jedi.api.replstartup" type="module"><dependency name="jedi" type="package" /><dependency name="jedi.utils" type="module" /></module><module name="jedi.api.strings" type="module"><dependency name="jedi.api.classes" type="module" /><dependency name="jedi.api.completion" type="module" /><dependency name="jedi.api.file_name" type="module" /><dependency name="jedi.inference.helpers" type="module" /><dependency name="jedi.inference.names" type="module" /><dependency name="jedi.parser_utils" type="module" /></module><module name="jedi.cache" type="module"><dependency name="jedi.api" type="package" /><dependency name="jedi.api.classes" type="module" /><dependency name="jedi.api.environment" type="module" /><dependency name="jedi.api.helpers" type="module" /><dependency name="jedi.inference.base_value" type="module" /><dependency name="jedi.inference.compiled.mixed" type="module" /><dependency name="jedi.inference.compiled.subprocess" type="package" /><dependency name="jedi.inference.compiled.value" type="module" /><dependency name="jedi.inference.gradual.generics" type="module" /><dependency name="jedi.inference.names" type="module" /><dependency name="jedi.inference.signature" type="module" /><dependency name="jedi.settings" type="module" /></module><module name="jedi.common" type="module"><dependency name="jedi.api.refactoring.extract" type="module" /><dependency name="jedi.inference.lazy_value" type="module" /><dependency name="scripts.diff_parser_profile" type="module" /></module><module name="jedi.debug" type="module"><dependency name="jedi.api" type="package" /><dependency name="jedi.api.classes" type="module" /><dependency name="jedi.api.completion" type="module" /><dependency name="jedi.api.project" type="module" /><dependency name="jedi.api.refactoring.extract" type="module" /><dependency name="jedi.inference" type="package" /><dependency name="jedi.inference.analysis" type="module" /><dependency name="jedi.inference.arguments" type="module" /><dependency name="jedi.inference.base_value" type="module" /><dependency name="jedi.inference.cache" type="module" /><dependency name="jedi.inference.compiled.getattr_static" type="module" /><dependency name="jedi.inference.compiled.subprocess" type="package" /><dependency name="jedi.inference.compiled.subprocess.functions" type="module" /><dependency name="jedi.inference.compiled.value" type="module" /><dependency name="jedi.inference.context" type="module" /><dependency name="jedi.inference.docstrings" type="module" /><dependency name="jedi.inference.dynamic_params" type="module" /><dependency name="jedi.inference.gradual.annotation" type="module" /><dependency name="jedi.inference.gradual.conversion" type="module" /><dependency name="jedi.inference.gradual.generics" type="module" /><dependency name="jedi.inference.gradual.type_var" type="module" /><dependency name="jedi.inference.gradual.typing" type="module" /><dependency name="jedi.inference.imports" type="module" /><dependency name="jedi.inference.param" type="module" /><dependency name="jedi.inference.recursion" type="module" /><dependency name="jedi.inference.references" type="module" /><dependency name="jedi.inference.signature" type="module" /><dependency name="jedi.inference.syntax_tree" type="module" /><dependency name="jedi.inference.sys_path" type="module" /><dependency name="jedi.inference.value.dynamic_arrays" type="module" /><dependency name="jedi.inference.value.function" type="module" /><dependency name="jedi.inference.value.instance" type="module" /><dependency name="jedi.inference.value.klass" type="module" /><dependency name="jedi.plugins.django" type="module" /><dependency name="jedi.plugins.stdlib" type="module" /></module><module name="jedi.file_io" type="module"><dependency name="jedi.api" type="package" /><dependency name="jedi.api.project" type="module" /><dependency name="jedi.inference" type="package" /><dependency name="jedi.inference.compiled.mixed" type="module" /><dependency name="jedi.inference.compiled.subprocess.functions" type="module" /><dependency name="jedi.inference.gradual.typeshed" type="module" /><dependency name="jedi.inference.imports" type="module" /><dependency name="jedi.inference.references" type="module" /><dependency name="jedi.inference.sys_path" type="module" /></module><module name="jedi.inference" type="package"><dependency name="jedi.api" type="package" /><dependency name="jedi.api.environment" type="module" /><dependency name="jedi.debug" type="module" /><dependency name="jedi.file_io" type="module" /><dependency name="jedi.inference.base_value" type="module" /><dependency name="jedi.inference.cache" type="module" /><dependency name="jedi.inference.compiled.subprocess" type="package" /><dependency name="jedi.inference.helpers" type="module" /><dependency name="jedi.inference.imports" type="module" /><dependency name="jedi.inference.names" type="module" /><dependency name="jedi.inference.recursion" type="module" /><dependency name="jedi.inference.syntax_tree" type="module" /><dependency name="jedi.inference.value" type="package" /><dependency name="jedi.plugins" type="package" /><dependency name="jedi.settings" type="module" /></module><module name="jedi.inference.analysis" type="module"><dependency name="jedi.debug" type="module" /><dependency name="jedi.inference.arguments" type="module" /><dependency name="jedi.inference.base_value" type="module" /><dependency name="jedi.inference.context" type="module" /><dependency name="jedi.inference.helpers" type="module" /><dependency name="jedi.inference.imports" type="module" /><dependency name="jedi.inference.param" type="module" /><dependency name="jedi.inference.syntax_tree" type="module" /><dependency name="jedi.inference.value.iterable" type="module" /><dependency name="jedi.plugins.stdlib" type="module" /></module><module name="jedi.inference.arguments" type="module"><dependency name="jedi.api" type="package" /><dependency name="jedi.debug" type="module" /><dependency name="jedi.inference.analysis" type="module" /><dependency name="jedi.inference.base_value" type="module" /><dependency name="jedi.inference.cache" type="module" /><dependency name="jedi.inference.dynamic_params" type="module" /><dependency name="jedi.inference.finder" type="module" /><dependency name="jedi.inference.gradual.typing" type="module" /><dependency name="jedi.inference.lazy_value" type="module" /><dependency name="jedi.inference.names" type="module" /><dependency name="jedi.inference.star_args" type="module" /><dependency name="jedi.inference.syntax_tree" type="module" /><dependency name="jedi.inference.utils" type="module" /><dependency name="jedi.inference.value.dynamic_arrays" type="module" /><dependency name="jedi.inference.value.instance" type="module" /><dependency name="jedi.inference.value.iterable" type="module" /><dependency name="jedi.inference.value.klass" type="module" /><dependency name="jedi.plugins.stdlib" type="module" /></module><module name="jedi.inference.base_value" type="module"><dependency name="jedi.api" type="package" /><dependency name="jedi.api.classes" type="module" /><dependency name="jedi.api.completion" type="module" /><dependency name="jedi.api.helpers" type="module" /><dependency name="jedi.api.interpreter" type="module" /><dependency name="jedi.cache" type="module" /><dependency name="jedi.debug" type="module" /><dependency name="jedi.inference" type="package" /><dependency name="jedi.inference.analysis" type="module" /><dependency name="jedi.inference.arguments" type="module" /><dependency name="jedi.inference.cache" type="module" /><dependency name="jedi.inference.compiled" type="package" /><dependency name="jedi.inference.compiled.mixed" type="module" /><dependency name="jedi.inference.compiled.value" type="module" /><dependency name="jedi.inference.context" type="module" /><dependency name="jedi.inference.docstrings" type="module" /><dependency name="jedi.inference.dynamic_params" type="module" /><dependency name="jedi.inference.filters" type="module" /><dependency name="jedi.inference.finder" type="module" /><dependency name="jedi.inference.gradual.annotation" type="module" /><dependency name="jedi.inference.gradual.base" type="module" /><dependency name="jedi.inference.gradual.conversion" type="module" /><dependency name="jedi.inference.gradual.generics" type="module" /><dependency name="jedi.inference.gradual.stub_value" type="module" /><dependency name="jedi.inference.gradual.type_var" type="module" /><dependency name="jedi.inference.gradual.typeshed" type="module" /><dependency name="jedi.inference.gradual.typing" type="module" /><dependency name="jedi.inference.helpers" type="module" /><dependency name="jedi.inference.imports" type="module" /><dependency name="jedi.inference.lazy_value" type="module" /><dependency name="jedi.inference.names" type="module" /><dependency name="jedi.inference.recursion" type="module" /><dependency name="jedi.inference.syntax_tree" type="module" /><dependency name="jedi.inference.sys_path" type="module" /><dependency name="jedi.inference.utils" type="module" /><dependency name="jedi.inference.value.decorator" type="module" /><dependency name="jedi.inference.value.dynamic_arrays" type="module" /><dependency name="jedi.inference.value.function" type="module" /><dependency name="jedi.inference.value.instance" type="module" /><dependency name="jedi.inference.value.iterable" type="module" /><dependency name="jedi.inference.value.klass" type="module" /><dependency name="jedi.inference.value.module" type="module" /><dependency name="jedi.inference.value.namespace" type="module" /><dependency name="jedi.parser_utils" type="module" /><dependency name="jedi.plugins.django" type="module" /><dependency name="jedi.plugins.pytest" type="module" /><dependency name="jedi.plugins.stdlib" type="module" /></module><module name="jedi.inference.cache" type="module"><dependency name="jedi.api.project" type="module" /><dependency name="jedi.debug" type="module" /><dependency name="jedi.inference" type="package" /><dependency name="jedi.inference.arguments" type="module" /><dependency name="jedi.inference.base_value" type="module" /><dependency name="jedi.inference.compiled.mixed" type="module" /><dependency name="jedi.inference.compiled.value" type="module" /><dependency name="jedi.inference.docstrings" type="module" /><dependency name="jedi.inference.dynamic_params" type="module" /><dependency name="jedi.inference.gradual.annotation" type="module" /><dependency name="jedi.inference.gradual.base" type="module" /><dependency name="jedi.inference.imports" type="module" /><dependency name="jedi.inference.names" type="module" /><dependency name="jedi.inference.parser_cache" type="module" /><dependency name="jedi.inference.syntax_tree" type="module" /><dependency name="jedi.inference.sys_path" type="module" /><dependency name="jedi.inference.value.dynamic_arrays" type="module" /><dependency name="jedi.inference.value.function" type="module" /><dependency name="jedi.inference.value.instance" type="module" /><dependency name="jedi.inference.value.iterable" type="module" /><dependency name="jedi.inference.value.klass" type="module" /><dependency name="jedi.inference.value.module" type="module" /><dependency name="jedi.inference.value.namespace" type="module" /><dependency name="jedi.plugins.django" type="module" /><dependency name="jedi.plugins.pytest" type="module" /></module><module name="jedi.inference.compiled" type="package"><dependency name="jedi.api.helpers" type="module" /><dependency name="jedi.api.interpreter" type="module" /><dependency name="jedi.inference.base_value" type="module" /><dependency name="jedi.inference.compiled.mixed" type="module" /><dependency name="jedi.inference.compiled.value" type="module" /><dependency name="jedi.inference.gradual.annotation" type="module" /><dependency name="jedi.inference.gradual.base" type="module" /><dependency name="jedi.inference.gradual.typing" type="module" /><dependency name="jedi.inference.helpers" type="module" /><dependency name="jedi.inference.imports" type="module" /><dependency name="jedi.inference.syntax_tree" type="module" /><dependency name="jedi.inference.value.function" type="module" /><dependency name="jedi.inference.value.instance" type="module" /><dependency name="jedi.inference.value.iterable" type="module" /><dependency name="jedi.inference.value.klass" type="module" /><dependency name="jedi.inference.value.module" type="module" /><dependency name="jedi.plugins.stdlib" type="module" /></module><module name="jedi.inference.compiled.access" type="module"><dependency name="jedi.api.interpreter" type="module" /><dependency name="jedi.inference.compiled.getattr_static" type="module" /><dependency name="jedi.inference.compiled.mixed" type="module" /><dependency name="jedi.inference.compiled.subprocess" type="package" /><dependency name="jedi.inference.compiled.subprocess.functions" type="module" /><dependency name="jedi.inference.compiled.value" type="module" /><dependency name="jedi.inference.syntax_tree" type="module" /></module><module name="jedi.inference.compiled.getattr_static" type="module"><dependency name="jedi.debug" type="module" /><dependency name="jedi.inference.compiled.access" type="module" /></module><module name="jedi.inference.compiled.mixed" type="module"><dependency name="jedi.api.classes" type="module" /><dependency name="jedi.api.interpreter" type="module" /><dependency name="jedi.cache" type="module" /><dependency name="jedi.file_io" type="module" /><dependency name="jedi.inference.base_value" type="module" /><dependency name="jedi.inference.cache" type="module" /><dependency name="jedi.inference.compiled" type="package" /><dependency name="jedi.inference.compiled.access" type="module" /><dependency name="jedi.inference.context" type="module" /><dependency name="jedi.inference.gradual.conversion" type="module" /><dependency name="jedi.inference.names" type="module" /><dependency name="jedi.inference.value" type="package" /><dependency name="jedi.parser_utils" type="module" /><dependency name="jedi.settings" type="module" /></module><module name="jedi.inference.compiled.subprocess" type="package"><dependency name="jedi" type="package" /><dependency name="jedi._compatibility" type="module" /><dependency name="jedi.api.environment" type="module" /><dependency name="jedi.api.exceptions" type="module" /><dependency name="jedi.cache" type="module" /><dependency name="jedi.debug" type="module" /><dependency name="jedi.inference" type="package" /><dependency name="jedi.inference.compiled.access" type="module" /><dependency name="jedi.inference.compiled.subprocess.__main__" type="module" /><dependency name="jedi.inference.compiled.subprocess.functions" type="module" /></module><module name="jedi.inference.compiled.subprocess.__main__" type="module"><dependency name="jedi.inference.compiled.subprocess" type="package" /></module><module name="jedi.inference.compiled.subprocess.functions" type="module"><dependency name="jedi.debug" type="module" /><dependency name="jedi.file_io" type="module" /><dependency name="jedi.inference.compiled.access" type="module" /><dependency name="jedi.inference.compiled.subprocess" type="package" /><dependency name="jedi.inference.imports" type="module" /><dependency name="jedi.parser_utils" type="module" /></module><module name="jedi.inference.compiled.value" type="module"><dependency name="jedi.cache" type="module" /><dependency name="jedi.debug" type="module" /><dependency name="jedi.inference.base_value" type="module" /><dependency name="jedi.inference.cache" type="module" /><dependency name="jedi.inference.compiled" type="package" /><dependency name="jedi.inference.compiled.access" type="module" /><dependency name="jedi.inference.context" type="module" /><dependency name="jedi.inference.docstrings" type="module" /><dependency name="jedi.inference.filters" type="module" /><dependency name="jedi.inference.gradual.typing" type="module" /><dependency name="jedi.inference.helpers" type="module" /><dependency name="jedi.inference.lazy_value" type="module" /><dependency name="jedi.inference.names" type="module" /><dependency name="jedi.inference.signature" type="module" /><dependency name="jedi.inference.utils" type="module" /><dependency name="jedi.inference.value" type="package" /><dependency name="jedi.inference.value.instance" type="module" /><dependency name="jedi.plugins.django" type="module" /></module><module name="jedi.inference.context" type="module"><dependency name="jedi.api.completion" type="module" /><dependency name="jedi.api.interpreter" type="module" /><dependency name="jedi.debug" type="module" /><dependency name="jedi.inference.analysis" type="module" /><dependency name="jedi.inference.base_value" type="module" /><dependency name="jedi.inference.compiled.mixed" type="module" /><dependency name="jedi.inference.compiled.value" type="module" /><dependency name="jedi.inference.docstring_utils" type="module" /><dependency name="jedi.inference.filters" type="module" /><dependency name="jedi.inference.finder" type="module" /><dependency name="jedi.inference.flow_analysis" type="module" /><dependency name="jedi.inference.gradual.base" type="module" /><dependency name="jedi.inference.gradual.stub_value" type="module" /><dependency name="jedi.inference.names" type="module" /><dependency name="jedi.inference.syntax_tree" type="module" /><dependency name="jedi.inference.value" type="package" /><dependency name="jedi.inference.value.function" type="module" /><dependency name="jedi.inference.value.iterable" type="module" /><dependency name="jedi.inference.value.klass" type="module" /><dependency name="jedi.inference.value.module" type="module" /><dependency name="jedi.inference.value.namespace" type="module" /><dependency name="jedi.parser_utils" type="module" /></module><module name="jedi.inference.docstring_utils" type="module"><dependency name="jedi.api.completion" type="module" /><dependency name="jedi.inference.context" type="module" /><dependency name="jedi.inference.docstrings" type="module" /><dependency name="jedi.inference.value" type="package" /></module><module name="jedi.inference.docstrings" type="module"><dependency name="jedi.debug" type="module" /><dependency name="jedi.inference.base_value" type="module" /><dependency name="jedi.inference.cache" type="module" /><dependency name="jedi.inference.compiled.value" type="module" /><dependency name="jedi.inference.docstring_utils" type="module" /><dependency name="jedi.inference.lazy_value" type="module" /><dependency name="jedi.inference.names" type="module" /><dependency name="jedi.inference.value.function" type="module" /><dependency name="jedi.inference.value.iterable" type="module" /></module><module name="jedi.inference.dynamic_params" type="module"><dependency name="jedi.debug" type="module" /><dependency name="jedi.inference.arguments" type="module" /><dependency name="jedi.inference.base_value" type="module" /><dependency name="jedi.inference.cache" type="module" /><dependency name="jedi.inference.helpers" type="module" /><dependency name="jedi.inference.names" type="module" /><dependency name="jedi.inference.param" type="module" /><dependency name="jedi.inference.recursion" type="module" /><dependency name="jedi.inference.references" type="module" /><dependency name="jedi.inference.utils" type="module" /><dependency name="jedi.inference.value.function" type="module" /><dependency name="jedi.inference.value.instance" type="module" /><dependency name="jedi.parser_utils" type="module" /><dependency name="jedi.settings" type="module" /></module><module name="jedi.inference.filters" type="module"><dependency name="jedi.api.interpreter" type="module" /><dependency name="jedi.inference.base_value" type="module" /><dependency name="jedi.inference.compiled.value" type="module" /><dependency name="jedi.inference.context" type="module" /><dependency name="jedi.inference.flow_analysis" type="module" /><dependency name="jedi.inference.gradual.stub_value" type="module" /><dependency name="jedi.inference.gradual.typing" type="module" /><dependency name="jedi.inference.names" type="module" /><dependency name="jedi.inference.references" type="module" /><dependency name="jedi.inference.utils" type="module" /><dependency name="jedi.inference.value.function" type="module" /><dependency name="jedi.inference.value.instance" type="module" /><dependency name="jedi.inference.value.iterable" type="module" /><dependency name="jedi.inference.value.klass" type="module" /><dependency name="jedi.inference.value.module" type="module" /><dependency name="jedi.inference.value.namespace" type="module" /><dependency name="jedi.parser_utils" type="module" /><dependency name="jedi.plugins.django" type="module" /><dependency name="jedi.plugins.pytest" type="module" /><dependency name="jedi.plugins.stdlib" type="module" /></module><module name="jedi.inference.finder" type="module"><dependency name="jedi.inference.arguments" type="module" /><dependency name="jedi.inference.base_value" type="module" /><dependency name="jedi.inference.context" type="module" /><dependency name="jedi.inference.value.iterable" type="module" /><dependency name="jedi.parser_utils" type="module" /><dependency name="jedi.settings" type="module" /></module><module name="jedi.inference.flow_analysis" type="module"><dependency name="jedi.inference.context" type="module" /><dependency name="jedi.inference.filters" type="module" /><dependency name="jedi.inference.helpers" type="module" /><dependency name="jedi.inference.recursion" type="module" /><dependency name="jedi.inference.value.function" type="module" /><dependency name="jedi.parser_utils" type="module" /></module><module name="jedi.inference.gradual" type="package" /><module name="jedi.inference.gradual.annotation" type="module"><dependency name="jedi.debug" type="module" /><dependency name="jedi.inference.base_value" type="module" /><dependency name="jedi.inference.cache" type="module" /><dependency name="jedi.inference.compiled" type="package" /><dependency name="jedi.inference.gradual.base" type="module" /><dependency name="jedi.inference.gradual.generics" type="module" /><dependency name="jedi.inference.gradual.type_var" type="module" /><dependency name="jedi.inference.gradual.typing" type="module" /><dependency name="jedi.inference.helpers" type="module" /><dependency name="jedi.inference.names" type="module" /><dependency name="jedi.inference.param" type="module" /><dependency name="jedi.inference.syntax_tree" type="module" /><dependency name="jedi.inference.value.function" type="module" /><dependency name="jedi.inference.value.instance" type="module" /><dependency name="jedi.inference.value.klass" type="module" /><dependency name="jedi.parser_utils" type="module" /></module><module name="jedi.inference.gradual.base" type="module"><dependency name="jedi.inference.base_value" type="module" /><dependency name="jedi.inference.cache" type="module" /><dependency name="jedi.inference.compiled" type="package" /><dependency name="jedi.inference.context" type="module" /><dependency name="jedi.inference.gradual.annotation" type="module" /><dependency name="jedi.inference.gradual.generics" type="module" /><dependency name="jedi.inference.gradual.type_var" type="module" /><dependency name="jedi.inference.gradual.typing" type="module" /><dependency name="jedi.inference.names" type="module" /><dependency name="jedi.inference.utils" type="module" /><dependency name="jedi.inference.value.function" type="module" /><dependency name="jedi.inference.value.iterable" type="module" /><dependency name="jedi.inference.value.klass" type="module" /><dependency name="jedi.plugins.django" type="module" /></module><module name="jedi.inference.gradual.conversion" type="module"><dependency name="jedi.api" type="package" /><dependency name="jedi.api.classes" type="module" /><dependency name="jedi.api.completion" type="module" /><dependency name="jedi.debug" type="module" /><dependency name="jedi.inference.base_value" type="module" /><dependency name="jedi.inference.compiled.mixed" type="module" /><dependency name="jedi.inference.gradual.stub_value" type="module" /><dependency name="jedi.inference.gradual.typeshed" type="module" /><dependency name="jedi.inference.imports" type="module" /><dependency name="jedi.inference.names" type="module" /><dependency name="jedi.inference.references" type="module" /><dependency name="jedi.inference.utils" type="module" /><dependency name="jedi.inference.value.decorator" type="module" /></module><module name="jedi.inference.gradual.generics" type="module"><dependency name="jedi.cache" type="module" /><dependency name="jedi.debug" type="module" /><dependency name="jedi.inference.base_value" type="module" /><dependency name="jedi.inference.gradual.annotation" type="module" /><dependency name="jedi.inference.gradual.base" type="module" /><dependency name="jedi.inference.gradual.typing" type="module" /><dependency name="jedi.inference.helpers" type="module" /><dependency name="jedi.inference.utils" type="module" /><dependency name="jedi.inference.value.function" type="module" /><dependency name="jedi.inference.value.iterable" type="module" /><dependency name="jedi.inference.value.klass" type="module" /><dependency name="jedi.plugins.django" type="module" /></module><module name="jedi.inference.gradual.stub_value" type="module"><dependency name="jedi.api.classes" type="module" /><dependency name="jedi.inference.base_value" type="module" /><dependency name="jedi.inference.context" type="module" /><dependency name="jedi.inference.filters" type="module" /><dependency name="jedi.inference.gradual.conversion" type="module" /><dependency name="jedi.inference.gradual.typeshed" type="module" /><dependency name="jedi.inference.gradual.typing" type="module" /><dependency name="jedi.inference.names" type="module" /><dependency name="jedi.inference.syntax_tree" type="module" /><dependency name="jedi.inference.value.module" type="module" /></module><module name="jedi.inference.gradual.type_var" type="module"><dependency name="jedi.debug" type="module" /><dependency name="jedi.inference.base_value" type="module" /><dependency name="jedi.inference.gradual.annotation" type="module" /><dependency name="jedi.inference.gradual.base" type="module" /><dependency name="jedi.inference.gradual.typing" type="module" /></module><module name="jedi.inference.gradual.typeshed" type="module"><dependency name="jedi.file_io" type="module" /><dependency name="jedi.inference.base_value" type="module" /><dependency name="jedi.inference.gradual.conversion" type="module" /><dependency name="jedi.inference.gradual.stub_value" type="module" /><dependency name="jedi.inference.gradual.utils" type="module" /><dependency name="jedi.inference.imports" type="module" /><dependency name="jedi.inference.value" type="package" /><dependency name="jedi.parser_utils" type="module" /><dependency name="jedi.settings" type="module" /></module><module name="jedi.inference.gradual.typing" type="module"><dependency name="jedi.debug" type="module" /><dependency name="jedi.inference.arguments" type="module" /><dependency name="jedi.inference.base_value" type="module" /><dependency name="jedi.inference.compiled" type="package" /><dependency name="jedi.inference.compiled.value" type="module" /><dependency name="jedi.inference.filters" type="module" /><dependency name="jedi.inference.gradual.annotation" type="module" /><dependency name="jedi.inference.gradual.base" type="module" /><dependency name="jedi.inference.gradual.generics" type="module" /><dependency name="jedi.inference.gradual.stub_value" type="module" /><dependency name="jedi.inference.gradual.type_var" type="module" /><dependency name="jedi.inference.imports" type="module" /><dependency name="jedi.inference.lazy_value" type="module" /><dependency name="jedi.inference.names" type="module" /><dependency name="jedi.inference.value.klass" type="module" /></module><module name="jedi.inference.gradual.utils" type="module"><dependency name="jedi.api" type="package" /><dependency name="jedi.inference.gradual.typeshed" type="module" /></module><module name="jedi.inference.helpers" type="module"><dependency name="jedi.api" type="package" /><dependency name="jedi.api.completion" type="module" /><dependency name="jedi.api.file_name" type="module" /><dependency name="jedi.api.helpers" type="module" /><dependency name="jedi.api.strings" type="module" /><dependency name="jedi.inference" type="package" /><dependency name="jedi.inference.analysis" type="module" /><dependency name="jedi.inference.base_value" type="module" /><dependency name="jedi.inference.compiled" type="package" /><dependency name="jedi.inference.compiled.value" type="module" /><dependency name="jedi.inference.dynamic_params" type="module" /><dependency name="jedi.inference.flow_analysis" type="module" /><dependency name="jedi.inference.gradual.annotation" type="module" /><dependency name="jedi.inference.gradual.generics" type="module" /><dependency name="jedi.inference.imports" type="module" /><dependency name="jedi.inference.names" type="module" /><dependency name="jedi.inference.star_args" type="module" /><dependency name="jedi.inference.syntax_tree" type="module" /><dependency name="jedi.inference.sys_path" type="module" /><dependency name="jedi.inference.value.dynamic_arrays" type="module" /><dependency name="jedi.inference.value.function" type="module" /><dependency name="jedi.inference.value.instance" type="module" /><dependency name="jedi.inference.value.iterable" type="module" /><dependency name="jedi.inference.value.module" type="module" /><dependency name="jedi.plugins.pytest" type="module" /><dependency name="jedi.plugins.stdlib" type="module" /></module><module name="jedi.inference.imports" type="module"><dependency name="jedi.api" type="package" /><dependency name="jedi.api.completion" type="module" /><dependency name="jedi.api.project" type="module" /><dependency name="jedi.debug" type="module" /><dependency name="jedi.file_io" type="module" /><dependency name="jedi.inference" type="package" /><dependency name="jedi.inference.analysis" type="module" /><dependency name="jedi.inference.base_value" type="module" /><dependency name="jedi.inference.cache" type="module" /><dependency name="jedi.inference.compiled" type="package" /><dependency name="jedi.inference.compiled.subprocess.functions" type="module" /><dependency name="jedi.inference.gradual.conversion" type="module" /><dependency name="jedi.inference.gradual.typeshed" type="module" /><dependency name="jedi.inference.gradual.typing" type="module" /><dependency name="jedi.inference.helpers" type="module" /><dependency name="jedi.inference.names" type="module" /><dependency name="jedi.inference.references" type="module" /><dependency name="jedi.inference.syntax_tree" type="module" /><dependency name="jedi.inference.sys_path" type="module" /><dependency name="jedi.inference.utils" type="module" /><dependency name="jedi.inference.value" type="package" /><dependency name="jedi.inference.value.module" type="module" /><dependency name="jedi.inference.value.namespace" type="module" /><dependency name="jedi.parser_utils" type="module" /><dependency name="jedi.plugins" type="package" /><dependency name="jedi.plugins.pytest" type="module" /><dependency name="jedi.settings" type="module" /></module><module name="jedi.inference.lazy_value" type="module"><dependency name="jedi.common" type="module" /><dependency name="jedi.inference.arguments" type="module" /><dependency name="jedi.inference.base_value" type="module" /><dependency name="jedi.inference.compiled.value" type="module" /><dependency name="jedi.inference.docstrings" type="module" /><dependency name="jedi.inference.gradual.typing" type="module" /><dependency name="jedi.inference.param" type="module" /><dependency name="jedi.inference.syntax_tree" type="module" /><dependency name="jedi.inference.value.dynamic_arrays" type="module" /><dependency name="jedi.inference.value.function" type="module" /><dependency name="jedi.inference.value.instance" type="module" /><dependency name="jedi.inference.value.iterable" type="module" /><dependency name="jedi.inference.value.klass" type="module" /><dependency name="jedi.plugins.stdlib" type="module" /></module><module name="jedi.inference.names" type="module"><dependency name="jedi.api.classes" type="module" /><dependency name="jedi.api.completion" type="module" /><dependency name="jedi.api.interpreter" type="module" /><dependency name="jedi.api.keywords" type="module" /><dependency name="jedi.api.strings" type="module" /><dependency name="jedi.cache" type="module" /><dependency name="jedi.inference" type="package" /><dependency name="jedi.inference.arguments" type="module" /><dependency name="jedi.inference.base_value" type="module" /><dependency name="jedi.inference.cache" type="module" /><dependency name="jedi.inference.compiled.mixed" type="module" /><dependency name="jedi.inference.compiled.value" type="module" /><dependency name="jedi.inference.context" type="module" /><dependency name="jedi.inference.docstrings" type="module" /><dependency name="jedi.inference.dynamic_params" type="module" /><dependency name="jedi.inference.filters" type="module" /><dependency name="jedi.inference.gradual.annotation" type="module" /><dependency name="jedi.inference.gradual.base" type="module" /><dependency name="jedi.inference.gradual.conversion" type="module" /><dependency name="jedi.inference.gradual.stub_value" type="module" /><dependency name="jedi.inference.gradual.typing" type="module" /><dependency name="jedi.inference.helpers" type="module" /><dependency name="jedi.inference.imports" type="module" /><dependency name="jedi.inference.param" type="module" /><dependency name="jedi.inference.references" type="module" /><dependency name="jedi.inference.star_args" type="module" /><dependency name="jedi.inference.syntax_tree" type="module" /><dependency name="jedi.inference.utils" type="module" /><dependency name="jedi.inference.value.function" type="module" /><dependency name="jedi.inference.value.instance" type="module" /><dependency name="jedi.inference.value.iterable" type="module" /><dependency name="jedi.inference.value.klass" type="module" /><dependency name="jedi.inference.value.module" type="module" /><dependency name="jedi.inference.value.namespace" type="module" /><dependency name="jedi.parser_utils" type="module" /><dependency name="jedi.plugins" type="package" /><dependency name="jedi.plugins.django" type="module" /><dependency name="jedi.plugins.stdlib" type="module" /></module><module name="jedi.inference.param" type="module"><dependency name="jedi.debug" type="module" /><dependency name="jedi.inference.analysis" type="module" /><dependency name="jedi.inference.dynamic_params" type="module" /><dependency name="jedi.inference.gradual.annotation" type="module" /><dependency name="jedi.inference.lazy_value" type="module" /><dependency name="jedi.inference.names" type="module" /><dependency name="jedi.inference.signature" type="module" /><dependency name="jedi.inference.utils" type="module" /><dependency name="jedi.inference.value.iterable" type="module" /></module><module name="jedi.inference.parser_cache" type="module"><dependency name="jedi.inference.cache" type="module" /><dependency name="jedi.inference.value.function" type="module" /></module><module name="jedi.inference.recursion" type="module"><dependency name="jedi.debug" type="module" /><dependency name="jedi.inference" type="package" /><dependency name="jedi.inference.base_value" type="module" /><dependency name="jedi.inference.dynamic_params" type="module" /><dependency name="jedi.inference.flow_analysis" type="module" /><dependency name="jedi.inference.syntax_tree" type="module" /><dependency name="jedi.inference.value.dynamic_arrays" type="module" /><dependency name="jedi.inference.value.function" type="module" /></module><module name="jedi.inference.references" type="module"><dependency name="jedi.api" type="package" /><dependency name="jedi.api.project" type="module" /><dependency name="jedi.debug" type="module" /><dependency name="jedi.file_io" type="module" /><dependency name="jedi.inference.dynamic_params" type="module" /><dependency name="jedi.inference.filters" type="module" /><dependency name="jedi.inference.gradual.conversion" type="module" /><dependency name="jedi.inference.imports" type="module" /><dependency name="jedi.inference.names" type="module" /></module><module name="jedi.inference.signature" type="module"><dependency name="jedi.cache" type="module" /><dependency name="jedi.debug" type="module" /><dependency name="jedi.inference.compiled.value" type="module" /><dependency name="jedi.inference.param" type="module" /><dependency name="jedi.inference.star_args" type="module" /><dependency name="jedi.inference.value.function" type="module" /><dependency name="jedi.parser_utils" type="module" /><dependency name="jedi.plugins.django" type="module" /><dependency name="jedi.plugins.stdlib" type="module" /></module><module name="jedi.inference.star_args" type="module"><dependency name="jedi.inference.arguments" type="module" /><dependency name="jedi.inference.helpers" type="module" /><dependency name="jedi.inference.names" type="module" /><dependency name="jedi.inference.signature" type="module" /><dependency name="jedi.inference.syntax_tree" type="module" /><dependency name="jedi.inference.utils" type="module" /></module><module name="jedi.inference.syntax_tree" type="module"><dependency name="jedi.api" type="package" /><dependency name="jedi.api.helpers" type="module" /><dependency name="jedi.debug" type="module" /><dependency name="jedi.inference" type="package" /><dependency name="jedi.inference.analysis" type="module" /><dependency name="jedi.inference.arguments" type="module" /><dependency name="jedi.inference.base_value" type="module" /><dependency name="jedi.inference.cache" type="module" /><dependency name="jedi.inference.compiled" type="package" /><dependency name="jedi.inference.compiled.access" type="module" /><dependency name="jedi.inference.context" type="module" /><dependency name="jedi.inference.gradual.annotation" type="module" /><dependency name="jedi.inference.gradual.stub_value" type="module" /><dependency name="jedi.inference.helpers" type="module" /><dependency name="jedi.inference.imports" type="module" /><dependency name="jedi.inference.lazy_value" type="module" /><dependency name="jedi.inference.names" type="module" /><dependency name="jedi.inference.recursion" type="module" /><dependency name="jedi.inference.star_args" type="module" /><dependency name="jedi.inference.value" type="package" /><dependency name="jedi.inference.value.decorator" type="module" /><dependency name="jedi.inference.value.dynamic_arrays" type="module" /><dependency name="jedi.inference.value.iterable" type="module" /><dependency name="jedi.inference.value.klass" type="module" /><dependency name="jedi.parser_utils" type="module" /><dependency name="jedi.plugins" type="package" /></module><module name="jedi.inference.sys_path" type="module"><dependency name="jedi.api" type="package" /><dependency name="jedi.api.project" type="module" /><dependency name="jedi.debug" type="module" /><dependency name="jedi.file_io" type="module" /><dependency name="jedi.inference.base_value" type="module" /><dependency name="jedi.inference.cache" type="module" /><dependency name="jedi.inference.helpers" type="module" /><dependency name="jedi.inference.imports" type="module" /><dependency name="jedi.inference.value" type="package" /><dependency name="jedi.parser_utils" type="module" /><dependency name="jedi.settings" type="module" /></module><module name="jedi.inference.utils" type="module"><dependency name="jedi.api" type="package" /><dependency name="jedi.api.classes" type="module" /><dependency name="jedi.inference.arguments" type="module" /><dependency name="jedi.inference.base_value" type="module" /><dependency name="jedi.inference.compiled.value" type="module" /><dependency name="jedi.inference.dynamic_params" type="module" /><dependency name="jedi.inference.filters" type="module" /><dependency name="jedi.inference.gradual.base" type="module" /><dependency name="jedi.inference.gradual.conversion" type="module" /><dependency name="jedi.inference.gradual.generics" type="module" /><dependency name="jedi.inference.imports" type="module" /><dependency name="jedi.inference.names" type="module" /><dependency name="jedi.inference.param" type="module" /><dependency name="jedi.inference.star_args" type="module" /><dependency name="jedi.inference.value.iterable" type="module" /><dependency name="jedi.plugins.stdlib" type="module" /></module><module name="jedi.inference.value" type="package"><dependency name="jedi.api" type="package" /><dependency name="jedi.api.completion" type="module" /><dependency name="jedi.inference" type="package" /><dependency name="jedi.inference.compiled.mixed" type="module" /><dependency name="jedi.inference.compiled.value" type="module" /><dependency name="jedi.inference.context" type="module" /><dependency name="jedi.inference.docstring_utils" type="module" /><dependency name="jedi.inference.gradual.typeshed" type="module" /><dependency name="jedi.inference.imports" type="module" /><dependency name="jedi.inference.syntax_tree" type="module" /><dependency name="jedi.inference.sys_path" type="module" /><dependency name="jedi.inference.value.function" type="module" /><dependency name="jedi.inference.value.instance" type="module" /><dependency name="jedi.inference.value.klass" type="module" /><dependency name="jedi.inference.value.module" type="module" /><dependency name="jedi.plugins.stdlib" type="module" /></module><module name="jedi.inference.value.decorator" type="module"><dependency name="jedi.inference.base_value" type="module" /><dependency name="jedi.inference.gradual.conversion" type="module" /><dependency name="jedi.inference.syntax_tree" type="module" /></module><module name="jedi.inference.value.dynamic_arrays" type="module"><dependency name="jedi.debug" type="module" /><dependency name="jedi.inference.arguments" type="module" /><dependency name="jedi.inference.base_value" type="module" /><dependency name="jedi.inference.cache" type="module" /><dependency name="jedi.inference.helpers" type="module" /><dependency name="jedi.inference.lazy_value" type="module" /><dependency name="jedi.inference.recursion" type="module" /><dependency name="jedi.inference.syntax_tree" type="module" /><dependency name="jedi.inference.value.instance" type="module" /><dependency name="jedi.inference.value.iterable" type="module" /><dependency name="jedi.settings" type="module" /></module><module name="jedi.inference.value.function" type="module"><dependency name="jedi.debug" type="module" /><dependency name="jedi.inference.base_value" type="module" /><dependency name="jedi.inference.cache" type="module" /><dependency name="jedi.inference.compiled" type="package" /><dependency name="jedi.inference.context" type="module" /><dependency name="jedi.inference.docstrings" type="module" /><dependency name="jedi.inference.dynamic_params" type="module" /><dependency name="jedi.inference.filters" type="module" /><dependency name="jedi.inference.flow_analysis" type="module" /><dependency name="jedi.inference.gradual.annotation" type="module" /><dependency name="jedi.inference.gradual.base" type="module" /><dependency name="jedi.inference.gradual.generics" type="module" /><dependency name="jedi.inference.helpers" type="module" /><dependency name="jedi.inference.lazy_value" type="module" /><dependency name="jedi.inference.names" type="module" /><dependency name="jedi.inference.parser_cache" type="module" /><dependency name="jedi.inference.recursion" type="module" /><dependency name="jedi.inference.signature" type="module" /><dependency name="jedi.inference.value" type="package" /><dependency name="jedi.inference.value.instance" type="module" /><dependency name="jedi.inference.value.iterable" type="module" /><dependency name="jedi.inference.value.klass" type="module" /><dependency name="jedi.parser_utils" type="module" /><dependency name="jedi.plugins.stdlib" type="module" /></module><module name="jedi.inference.value.instance" type="module"><dependency name="jedi.debug" type="module" /><dependency name="jedi.inference.arguments" type="module" /><dependency name="jedi.inference.base_value" type="module" /><dependency name="jedi.inference.cache" type="module" /><dependency name="jedi.inference.compiled" type="package" /><dependency name="jedi.inference.compiled.value" type="module" /><dependency name="jedi.inference.dynamic_params" type="module" /><dependency name="jedi.inference.filters" type="module" /><dependency name="jedi.inference.gradual.annotation" type="module" /><dependency name="jedi.inference.helpers" type="module" /><dependency name="jedi.inference.lazy_value" type="module" /><dependency name="jedi.inference.names" type="module" /><dependency name="jedi.inference.value" type="package" /><dependency name="jedi.inference.value.dynamic_arrays" type="module" /><dependency name="jedi.inference.value.function" type="module" /><dependency name="jedi.inference.value.klass" type="module" /><dependency name="jedi.parser_utils" type="module" /><dependency name="jedi.plugins.django" type="module" /><dependency name="jedi.plugins.stdlib" type="module" /><dependency name="jedi.settings" type="module" /></module><module name="jedi.inference.value.iterable" type="module"><dependency name="jedi.api" type="package" /><dependency name="jedi.inference.analysis" type="module" /><dependency name="jedi.inference.arguments" type="module" /><dependency name="jedi.inference.base_value" type="module" /><dependency name="jedi.inference.cache" type="module" /><dependency name="jedi.inference.compiled" type="package" /><dependency name="jedi.inference.context" type="module" /><dependency name="jedi.inference.docstrings" type="module" /><dependency name="jedi.inference.filters" type="module" /><dependency name="jedi.inference.finder" type="module" /><dependency name="jedi.inference.gradual.base" type="module" /><dependency name="jedi.inference.gradual.generics" type="module" /><dependency name="jedi.inference.helpers" type="module" /><dependency name="jedi.inference.lazy_value" type="module" /><dependency name="jedi.inference.names" type="module" /><dependency name="jedi.inference.param" type="module" /><dependency name="jedi.inference.syntax_tree" type="module" /><dependency name="jedi.inference.utils" type="module" /><dependency name="jedi.inference.value.dynamic_arrays" type="module" /><dependency name="jedi.inference.value.function" type="module" /><dependency name="jedi.parser_utils" type="module" /><dependency name="jedi.plugins.stdlib" type="module" /></module><module name="jedi.inference.value.klass" type="module"><dependency name="jedi.debug" type="module" /><dependency name="jedi.inference.arguments" type="module" /><dependency name="jedi.inference.base_value" type="module" /><dependency name="jedi.inference.cache" type="module" /><dependency name="jedi.inference.compiled" type="package" /><dependency name="jedi.inference.context" type="module" /><dependency name="jedi.inference.filters" type="module" /><dependency name="jedi.inference.gradual.annotation" type="module" /><dependency name="jedi.inference.gradual.base" type="module" /><dependency name="jedi.inference.gradual.generics" type="module" /><dependency name="jedi.inference.gradual.typing" type="module" /><dependency name="jedi.inference.lazy_value" type="module" /><dependency name="jedi.inference.names" type="module" /><dependency name="jedi.inference.syntax_tree" type="module" /><dependency name="jedi.inference.value" type="package" /><dependency name="jedi.inference.value.function" type="module" /><dependency name="jedi.inference.value.instance" type="module" /><dependency name="jedi.parser_utils" type="module" /><dependency name="jedi.plugins" type="package" /><dependency name="jedi.plugins.django" type="module" /><dependency name="jedi.plugins.stdlib" type="module" /></module><module name="jedi.inference.value.module" type="module"><dependency name="jedi.inference.base_value" type="module" /><dependency name="jedi.inference.cache" type="module" /><dependency name="jedi.inference.compiled" type="package" /><dependency name="jedi.inference.context" type="module" /><dependency name="jedi.inference.filters" type="module" /><dependency name="jedi.inference.gradual.stub_value" type="module" /><dependency name="jedi.inference.helpers" type="module" /><dependency name="jedi.inference.imports" type="module" /><dependency name="jedi.inference.names" type="module" /><dependency name="jedi.inference.value" type="package" /><dependency name="jedi.inference.value.namespace" type="module" /></module><module name="jedi.inference.value.namespace" type="module"><dependency name="jedi.api.refactoring" type="package" /><dependency name="jedi.inference.base_value" type="module" /><dependency name="jedi.inference.cache" type="module" /><dependency name="jedi.inference.context" type="module" /><dependency name="jedi.inference.filters" type="module" /><dependency name="jedi.inference.imports" type="module" /><dependency name="jedi.inference.names" type="module" /><dependency name="jedi.inference.value.module" type="module" /></module><module name="jedi.parser_utils" type="module"><dependency name="jedi.api" type="package" /><dependency name="jedi.api.completion" type="module" /><dependency name="jedi.api.helpers" type="module" /><dependency name="jedi.api.refactoring.extract" type="module" /><dependency name="jedi.api.strings" type="module" /><dependency name="jedi.inference.base_value" type="module" /><dependency name="jedi.inference.compiled.mixed" type="module" /><dependency name="jedi.inference.compiled.subprocess.functions" type="module" /><dependency name="jedi.inference.context" type="module" /><dependency name="jedi.inference.dynamic_params" type="module" /><dependency name="jedi.inference.filters" type="module" /><dependency name="jedi.inference.finder" type="module" /><dependency name="jedi.inference.flow_analysis" type="module" /><dependency name="jedi.inference.gradual.annotation" type="module" /><dependency name="jedi.inference.gradual.typeshed" type="module" /><dependency name="jedi.inference.imports" type="module" /><dependency name="jedi.inference.names" type="module" /><dependency name="jedi.inference.signature" type="module" /><dependency name="jedi.inference.syntax_tree" type="module" /><dependency name="jedi.inference.sys_path" type="module" /><dependency name="jedi.inference.value.function" type="module" /><dependency name="jedi.inference.value.instance" type="module" /><dependency name="jedi.inference.value.iterable" type="module" /><dependency name="jedi.inference.value.klass" type="module" /></module><module name="jedi.plugins" type="package"><dependency name="jedi.api.completion" type="module" /><dependency name="jedi.inference" type="package" /><dependency name="jedi.inference.imports" type="module" /><dependency name="jedi.inference.names" type="module" /><dependency name="jedi.inference.syntax_tree" type="module" /><dependency name="jedi.inference.value.klass" type="module" /><dependency name="jedi.plugins.registry" type="module" /></module><module name="jedi.plugins.django" type="module"><dependency name="jedi.debug" type="module" /><dependency name="jedi.inference.base_value" type="module" /><dependency name="jedi.inference.cache" type="module" /><dependency name="jedi.inference.compiled.value" type="module" /><dependency name="jedi.inference.filters" type="module" /><dependency name="jedi.inference.gradual.base" type="module" /><dependency name="jedi.inference.gradual.generics" type="module" /><dependency name="jedi.inference.names" type="module" /><dependency name="jedi.inference.signature" type="module" /><dependency name="jedi.inference.value.instance" type="module" /><dependency name="jedi.inference.value.klass" type="module" /><dependency name="jedi.plugins.registry" type="module" /></module><module name="jedi.plugins.flask" type="module"><dependency name="jedi.plugins.registry" type="module" /></module><module name="jedi.plugins.pytest" type="module"><dependency name="jedi.inference.base_value" type="module" /><dependency name="jedi.inference.cache" type="module" /><dependency name="jedi.inference.filters" type="module" /><dependency name="jedi.inference.helpers" type="module" /><dependency name="jedi.inference.imports" type="module" /><dependency name="jedi.plugins.registry" type="module" /></module><module name="jedi.plugins.registry" type="module"><dependency name="jedi" type="package" /><dependency name="jedi.plugins" type="package" /><dependency name="jedi.plugins.django" type="module" /><dependency name="jedi.plugins.flask" type="module" /><dependency name="jedi.plugins.pytest" type="module" /><dependency name="jedi.plugins.stdlib" type="module" /></module><module name="jedi.plugins.stdlib" type="module"><dependency name="jedi.debug" type="module" /><dependency name="jedi.inference.analysis" type="module" /><dependency name="jedi.inference.arguments" type="module" /><dependency name="jedi.inference.base_value" type="module" /><dependency name="jedi.inference.compiled" type="package" /><dependency name="jedi.inference.filters" type="module" /><dependency name="jedi.inference.helpers" type="module" /><dependency name="jedi.inference.lazy_value" type="module" /><dependency name="jedi.inference.names" type="module" /><dependency name="jedi.inference.signature" type="module" /><dependency name="jedi.inference.utils" type="module" /><dependency name="jedi.inference.value" type="package" /><dependency name="jedi.inference.value.function" type="module" /><dependency name="jedi.inference.value.instance" type="module" /><dependency name="jedi.inference.value.iterable" type="module" /><dependency name="jedi.inference.value.klass" type="module" /><dependency name="jedi.plugins.registry" type="module" /></module><module name="jedi.settings" type="module"><dependency name="jedi" type="package" /><dependency name="jedi.api" type="package" /><dependency name="jedi.api.classes" type="module" /><dependency name="jedi.api.completion" type="module" /><dependency name="jedi.cache" type="module" /><dependency name="jedi.inference" type="package" /><dependency name="jedi.inference.compiled.mixed" type="module" /><dependency name="jedi.inference.dynamic_params" type="module" /><dependency name="jedi.inference.finder" type="module" /><dependency name="jedi.inference.gradual.typeshed" type="module" /><dependency name="jedi.inference.imports" type="module" /><dependency name="jedi.inference.sys_path" type="module" /><dependency name="jedi.inference.value.dynamic_arrays" type="module" /><dependency name="jedi.inference.value.instance" type="module" /></module><module name="jedi.utils" type="module"><dependency name="jedi" type="package" /><dependency name="jedi.api.replstartup" type="module" /></module><module name="scripts.diff_parser_profile" type="module"><dependency name="jedi" type="package" /><dependency name="jedi.common" type="module" /></module><module name="scripts.memory_check" type="module"><dependency name="jedi" type="package" /></module><module name="scripts.profile_output" type="module"><dependency name="jedi" type="package" /></module><module name="scripts.wx_check" type="module"><dependency name="jedi" type="package" /></module></modules>